==============================================================================================================================
# continuous

	# 1D

		# histogram
		ggplot(df, aes(x=numeric_variable)) + 
		geom_histogram()

		# density plot
		ggplot(df, aes(numeric_variable)) +
		geom_density()

		# boxplot
		ggplot(df, aes(x=numeric_variable)) + 
		geom_boxplot()

	# 2D

		# scatterplot
		ggplot(df, aes(x=numeric_variable, 
					   y=numeric_variable)) +
		geom_point(alpha=0.5) +
		geom_smooth(method="lm")

		# line plot
		ggplot(df, aes(x=numeric_variable, 
					   y=numeric_variable)) +
		geom_line()

# categorical

	# 1D

		# count plot
		ggplot(data=df, aes(x=categorical_variable)) +
  		geom_bar()


	# 2D

  		# contingency table - group by two categorical vars and compute count
  		ggplot(df, aes(x=categorical_variable, 
  					   y=categorical_variable)) +
  		geom_tile(aes(fill=count_var)

# mixed

		# barplot - group by categorical var, aggregate by numeric var
		ggplot(data=df, aes(x=categorical_variable, 
							y=numeric_variable)) +
  		geom_bar(stat="identity")

  		# boxplot
  		ggplot(df, aes(x=categorical_variable, 
  					   y=numeric_variable)) +
		geom_boxplot()

		# heatmap
		ggplot(df, aes(x=categorical_variable, 
					   y=categorical_variable, 
					   fill=numeric_variable)) +
		geom_tile()

==============================================================================================================================
# customization

	# labels
	labs(title="", 
		 subtitle="", 
		 x="", 
		 y="")

	# text annotations

		# text variable
		geom_text(aes(label=text_var))  # no box around text
		geom_label(aes(label=text_var))  # rounded box around text

		# write text on graph
		annotate("text", 
				 label="custom.text", 
				 x=x.postition, 
				 y=y.position, 
				 size=, 
				 colour="text.color")

	# coord
	coord_cartesian(xlim = c(), ylim = c()) # doesn't remove data, only zooms-in or zooms-out.

	coord_trans(x = log, y = sqrt, limx = c(), limy = c()) # transforms the variables.

	coord_flip()

	coord_polar()  # can be used with bar plot to create pie charts.

	coord_map()

	# axis
	scale_x_continuous(breaks=seq(), 
					   limits=c(), 
					   labels=c())

	scale_color_gradient(low="green", 
						 high="red")

	scale_{fill,color}_{manual,continuous,discrete}(guide = guide_legend("legend.title"),
													labels = c("legend.names"),
													values = c("legend.colors"))

	# set display limits in graph to each element in aes() such as axis and colors
	expand_limits(x=c(start_point, end_point), 
				  y=c(start_point, end_point))

==============================================================================================================================
# themes

library(ggthemes)

	# classic
	theme_minimal()
	theme_void()
	theme_linedraw()
	theme_light()
	theme_classic()
	theme_grey()
	theme_bw()

	# other software themes
	theme_excel() + scale_fill_economist()
	theme_few() + scale_fill_few()
	theme_solarized() + scale_fill_solarized()
	theme_stata() + scale_fill_stata()
	theme_tufte() + scale_fill_tableau()
	theme_gdocs() + scale_fill_gdocs()
	theme_wsj() + scale_fill_wsj(palette = "black_green")

	theme(axis.line, 
		  axis.text.x=element_text(angle=45, 
		  						   hjust=1,
		  						   face="bold",
		  						   color="#993333", 
		  						   size=14),
		  axis.ticks,
		  axis.title.x, 
		  legend.position="none/bottom")

==============================================================================================================================
# multiple plots

	# subplots
	library(gridExtra)
	p1 <- ggplot()
	p2 <- ggplot()
	grid.arrange(p1,p2, 
				 ncol=,
				 nrow=)

	# facet - add more variables
	facet_wrap(~ categorical_variable)

	facet_grid(vertical_categorical_variable ~ horizontal_categorical_variable)

	# pair plot
	library(GGally)
	ggpairs(data_frame[, numeric_vars])

==============================================================================================================================

## maps

		library(ggmap)

		usa <- ggmap(get_googlemap(center=as.numeric(geocode("usa")), scale=2, zoom=13), extent="normal")
		usa <- get_map(location="united states", zoom = 4, maptype = "terrain",source="google",color="color")
		usa <- get_map(location = c(left, bottom, right, top), source = "osm")

		ggmap(usa) + geom_point(data = data_frame, aes(x = Longitude, y = Latitude))


		library(maps)

		usa <- map_data("state")
		data_frame <- merge(usa, data_frame, by = "")

		ggplot(data_frame, aes(x = long, y = lat, group = group))


		library(leaflet)
		map <- leaflet(data) %>%
				setView(lng = -71.0589, lat = 42.3601, zoom = 12) %>%
				addTiles() %>%  # Add default OpenStreetMap map tiles
				addMarkers(lng = ~long_var, lat = ~lat_var, popup/label = ~popup_var,
						   clusterOptions = markerClusterOptions()
						  ) %>%
				# circular markers instead of normal ones
				addCircleMarkers(radius = , color = "red", stroke = F, fillOpacity = 0.5) %>%
				addCircles(weight = 1, opacity = 1, color = "blue", fillOpacity = 0.7,,
						   highlight = highlightOptions(weight = 5, color = "red", dashArray = "",
						   								fillOpacity = 0.7, bringToFront = TRUE),
						   radius = ~population, stroke = F
						  ) %>%
				addRectangles(lng1 = -118.456554, lat1 = 34.078039,
							  lng2 = -118.436383, lat2 = 34.062717,
							  fillColor = "transparent"
							 ) %>%
				addLegend(position = "bottomright",
						  pal = pal <- colorNumeric(palette = "YlGnBu", domain = data$gdp),
						  values = ~gdp,
						  title = "GDP",
						  labFormat = labelFormat(prefix = "$"),
						  opacity = 1
						 ) %>%
				# plugin: measure distance between two points on map
				addMeasure(position = "bottomleft",
    					   primaryLengthUnit = "meters",
    					   primaryAreaUnit = "sqmeters",
    					   activeColor = "#3D535D",
    					   completedColor = "#7D4479"
    					  ) %>%
				# plugin: mini map to navigate easily
				addMiniMap(toggleDisplay = TRUE)


		print(map)

==============================================================================================================================
